[{"path":"http://www.reconverse.org/trendeval/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Tim Taylor Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://www.reconverse.org/trendeval/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dirk Schumacher. Author. Thibaut Jombart. Author, maintainer. Tim Taylor. Contributor.","code":""},{"path":"http://www.reconverse.org/trendeval/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schumacher D, Jombart T (2025). trendeval: Evaluate Trending Models. R package version 0.1.1, https://github.com/reconverse/trendeval.","code":"@Manual{,   title = {trendeval: Evaluate Trending Models},   author = {Dirk Schumacher and Thibaut Jombart},   year = {2025},   note = {R package version 0.1.1},   url = {https://github.com/reconverse/trendeval}, }"},{"path":"http://www.reconverse.org/trendeval/index.html","id":"trendeval","dir":"","previous_headings":"","what":"Evaluate Trending Models","title":"Evaluate Trending Models","text":"trendeval aims provide coherent interface evaluating models fit trending package. Whilst useful interactive context, ’s main focus provide intuitive interface packages can developed (e.g. trendbreaker).","code":""},{"path":"http://www.reconverse.org/trendeval/index.html","id":"installing-the-package","dir":"","previous_headings":"","what":"Installing the package","title":"Evaluate Trending Models","text":"can install stable version package CRAN : development version can installed GitHub :","code":"install.packages(\"trendeval\") if (!require(remotes)) {   install.packages(\"remotes\") } remotes::install_github(\"reconverse/trendeval\", build_vignettes = TRUE)"},{"path":"http://www.reconverse.org/trendeval/index.html","id":"model-selection-example","dir":"","previous_headings":"","what":"Model selection example","title":"Evaluate Trending Models","text":"","code":"library(dplyr)      # for data manipulation library(outbreaks)  # for data library(trending)   # for trend fitting library(trendeval)  # for model selection  # load data data(covid19_england_nhscalls_2020)  # define a selection of model in a named list models  <- list(   simple = lm_model(count ~ day),   glm_poisson = glm_model(count ~ day, family = \"poisson\"),   glm_poisson_weekday = glm_model(count ~ day + weekday, family = \"quasipoisson\"),   glm_quasipoisson = glm_model(count ~ day, family = \"poisson\"),   glm_quasipoisson_weekday = glm_model(count ~ day + weekday, family = \"quasipoisson\"),   glm_negbin = glm_nb_model(count ~ day),   glm_negbin_weekday = glm_nb_model(count ~ day + weekday),   will_error = glm_nb_model(count ~ day + nonexistant) )  # select 8 weeks of data (from a period when the prevalence was decreasing) last_date <- as.Date(\"2020-05-28\") first_date <- last_date - 8*7 pathways_recent <-   covid19_england_nhscalls_2020 %>%   filter(date >= first_date, date <= last_date) %>%   group_by(date, day, weekday) %>%   summarise(count = sum(count), .groups = \"drop\")  # split data for fitting and prediction dat <-   pathways_recent %>%   group_by(date <= first_date + 6*7) %>%   group_split() fitting_data <- dat[[2]] pred_data <- select(dat[[1]], date, day, weekday)  # assess the models using the evaluate_resampling results <-    models %>%    evaluate_resampling(fitting_data, metric = \"rmse\") %>%    summary results #> # A tibble: 8 × 5 #>   model_name               metric value splits_averaged nas_removed #>   <chr>                    <chr>  <dbl>           <dbl>       <dbl> #> 1 glm_negbin               rmse   5238.              43           0 #> 2 glm_negbin_weekday       rmse   5224.              43           0 #> 3 glm_poisson              rmse   5193.              43           0 #> 4 glm_poisson_weekday      rmse   5166.              43           0 #> 5 glm_quasipoisson         rmse   5193.              43           0 #> 6 glm_quasipoisson_weekday rmse   5166.              43           0 #> 7 simple                   rmse   6903.              43           0 #> 8 will_error               rmse    NaN               43          43"},{"path":"http://www.reconverse.org/trendeval/index.html","id":"example-of-how-this-output-could-then-be-used","dir":"","previous_headings":"Model selection example","what":"Example of how this output could then be used","title":"Evaluate Trending Models","text":"","code":"library(tidyr)      # for data manipulation library(purrr)      # for data manipulation library(ggplot2)    # for plotting  # Pull out the model with the lowest RMSE best_by_rmse <-    results %>%    slice_min(value) %>%    select(model_name) %>%    pluck(1,1) %>%    pluck(models, .)  # Now let's look at the following 14 days as well new_dat <-   covid19_england_nhscalls_2020 %>%    filter(date > \"2020-05-28\", date <= \"2020-06-11\") %>%    group_by(date, day, weekday) %>%   summarise(count = sum(count), .groups = \"drop\")  all_dat <- bind_rows(pathways_recent, new_dat)  out <-    best_by_rmse %>%     fit(pathways_recent) %>%    predict(all_dat) %>%     pluck(1) %>%    .subset2(1L) out #> <trending_prediction> 71 x 9 #>    date         day weekday      count estimate lower_ci upper…¹ lower…² upper…³ #>    <date>     <int> <fct>        <int>    <dbl>    <dbl>   <dbl>   <dbl>   <dbl> #>  1 2020-04-02    15 rest_of_week 71917   58301.   53120.  63988.   40268   79935 #>  2 2020-04-03    16 rest_of_week 63365   56280.   51398.  61625.   38771   77291 #>  3 2020-04-04    17 weekend      52412   47107.   41966.  52878.   30644   67450 #>  4 2020-04-05    18 weekend      54014   45474.   40576.  50962.   29459   65284 #>  5 2020-04-06    19 monday       78996   62206.   54362.  71181.   41350   87955 #>  6 2020-04-07    20 rest_of_week 62026   48871.   45017.  53054.   33258   67650 #>  7 2020-04-08    21 rest_of_week 51692   47176.   43540.  51116.   31991   65458 #>  8 2020-04-09    22 rest_of_week 40797   45540.   42108.  49253.   30765   63346 #>  9 2020-04-10    23 rest_of_week 33946   43961.   40718.  47463.   29580   61313 #> 10 2020-04-11    24 weekend      32269   36796.   33092.  40916.   23141   53834 #> # … with 61 more rows, and abbreviated variable names ¹​upper_ci, ²​lower_pi, #> #   ³​upper_pi  # plot output ggplot(out, aes(x = date, y = count)) +   geom_line() +   geom_ribbon(mapping = aes(x = date, ymin = lower_ci, ymax = upper_ci),               data = out, alpha = 0.5, fill = \"#BBB67E\") +   geom_ribbon(mapping = aes(x = date, ymin = lower_pi, ymax = upper_pi),               data = out, alpha = 0.5, fill = \"#BBB67E\") +   geom_vline(xintercept = as.Date(\"2020-05-28\") + 0.5) +   theme_bw()"},{"path":[]},{"path":"http://www.reconverse.org/trendeval/index.html","id":"getting-help-online","dir":"","previous_headings":"","what":"Getting help online","title":"Evaluate Trending Models","text":"Bug reports feature requests posted github using issue system. questions posted RECON slack channel see https://www.repidemicsconsortium.org/forum/ details join.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_aic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic for calculating the AIC — calculate_aic","title":"Generic for calculating the AIC — calculate_aic","text":"Generic calculate_aic() returns Akaike's 'Information Criterion' given input.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_aic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic for calculating the AIC — calculate_aic","text":"","code":"calculate_aic(x, ...)  # Default S3 method calculate_aic(x, ...)  # S3 method for class 'trending_model' calculate_aic(x, data, as_tibble = FALSE, ...)  # S3 method for class 'list' calculate_aic(x, data, ...)  # S3 method for class 'trending_fit' calculate_aic(x, as_tibble = FALSE, ...)  # S3 method for class 'trending_fit_tbl' calculate_aic(x, ...)"},{"path":"http://www.reconverse.org/trendeval/reference/calculate_aic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic for calculating the AIC — calculate_aic","text":"x R object. ... currently used. data data.frame containing data (including response variable predictors) used specified model. as_tibble result returned tibble (as_tibble = TRUE) list (as_tibble = FALSE).","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_aic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic for calculating the AIC — calculate_aic","text":"single trending_fit input, as_tibble = FALSE object returned list entries: metric: \"AIC\" result: resulting AIC value fit (NULL calculation failed) warnings: warnings generated calculation errors: errors generated calculation as_tibble = TRUE, input trending_fit_tbl, output tibble one row fitted model columns corresponding output generated single model input.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_aic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic for calculating the AIC — calculate_aic","text":"Specific methods given trending_fit trending_fit_tbl objects. default method applies stats::AIC() directly.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_aic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic for calculating the AIC — calculate_aic","text":"Tim Taylor #' @examples x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y) poisson_model <- glm_model(y ~ x , family = \"poisson\") negbin_model <- glm_nb_model(y ~ x) fitted_model <- fit(poisson_model, dat) fitted_models <- fit(list(poisson_model, negbin_model), data = dat) calculate_aic(poisson_model, dat) calculate_aic(fitted_model) calculate_aic(fitted_model, as_tibble = TRUE) calculate_aic(fitted_models)","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_mae.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic for calculating the root mean squared error — calculate_mae","title":"Generic for calculating the root mean squared error — calculate_mae","text":"Generic calculate_mae() returns root mean square error given input.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_mae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic for calculating the root mean squared error — calculate_mae","text":"","code":"calculate_mae(x, ...)  # Default S3 method calculate_mae(x, ...)  # S3 method for class 'trending_model' calculate_mae(x, data, na.rm = TRUE, as_tibble = TRUE, ...)  # S3 method for class 'list' calculate_mae(x, data, na.rm = TRUE, ...)  # S3 method for class 'trending_fit' calculate_mae(x, new_data, na.rm = TRUE, as_tibble = TRUE, ...)  # S3 method for class 'trending_fit_tbl' calculate_mae(x, new_data, na.rm = TRUE, ...)  # S3 method for class 'trending_predict' calculate_mae(x, na.rm = TRUE, as_tibble = TRUE, ...)  # S3 method for class 'trending_predict_tbl' calculate_mae(x, na.rm = TRUE, ...)  # S3 method for class 'trending_prediction' calculate_mae(x, na.rm = TRUE, as_tibble = TRUE, ...)"},{"path":"http://www.reconverse.org/trendeval/reference/calculate_mae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic for calculating the root mean squared error — calculate_mae","text":"x R object. ... currently used. data data.frame containing data (including response variable predictors) used specified model. na.rm NA values removed calculation metric (passed underlying function yardstick::mae_vec). as_tibble result returned tibble (as_tibble = TRUE) list (as_tibble = FALSE). new_data data.frame containing data (including response variable predictors) assess model.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_mae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic for calculating the root mean squared error — calculate_mae","text":"single trending_fit input, as_tibble = FALSE object returned list entries: metric: \"mae\" result: resulting mae value (NULL calculation failed) warnings: warnings generated calculation errors: errors generated calculation as_tibble = TRUE, trending classes, output tibble one row fitted model columns corresponding output generated single model input.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_mae.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic for calculating the root mean squared error — calculate_mae","text":"Specific methods given trending_model (lists ), trending_fit, trending_fit_tbl, trending_predict_tbl, trending_predict_tbl trending_prediction objects. simply wrappers around yardstick::mae_vec addition explicit error handling.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_mae.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic for calculating the root mean squared error — calculate_mae","text":"Tim Taylor #' @examples x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y) poisson_model <- glm_model(y ~ x , family = \"poisson\") negbin_model <- glm_nb_model(y ~ x) fitted_model <- fit(poisson_model, dat) fitted_models <- fit(list(poisson_model, negbin_model), data = dat) calculate_mae(poisson_model, dat) calculate_mae(fitted_model) calculate_mae(fitted_model, as_tibble = TRUE) calculate_mae(fitted_models)","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_rmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic for calculating the root mean squared error — calculate_rmse","title":"Generic for calculating the root mean squared error — calculate_rmse","text":"Generic calculate_rmse() returns root mean square error given input.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_rmse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic for calculating the root mean squared error — calculate_rmse","text":"","code":"calculate_rmse(x, ...)  # Default S3 method calculate_rmse(x, ...)  # S3 method for class 'trending_model' calculate_rmse(x, data, na.rm = TRUE, as_tibble = TRUE, ...)  # S3 method for class 'list' calculate_rmse(x, data, na.rm = TRUE, ...)  # S3 method for class 'trending_fit' calculate_rmse(x, new_data, na.rm = TRUE, as_tibble = TRUE, ...)  # S3 method for class 'trending_fit_tbl' calculate_rmse(x, new_data, na.rm = TRUE, ...)  # S3 method for class 'trending_predict' calculate_rmse(x, na.rm = TRUE, as_tibble = TRUE, ...)  # S3 method for class 'trending_predict_tbl' calculate_rmse(x, na.rm = TRUE, ...)  # S3 method for class 'trending_prediction' calculate_rmse(x, na.rm = TRUE, as_tibble = TRUE, ...)"},{"path":"http://www.reconverse.org/trendeval/reference/calculate_rmse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic for calculating the root mean squared error — calculate_rmse","text":"x R object. ... currently used. data data.frame containing data (including response variable predictors) used specified model. na.rm NA values removed calculation metric (passed underlying function yardstick::rmse_vec). as_tibble result returned tibble (as_tibble = TRUE) list (as_tibble = FALSE). new_data data.frame containing data (including response variable predictors) assess model.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_rmse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic for calculating the root mean squared error — calculate_rmse","text":"single trending_fit input, as_tibble = FALSE object returned list entries: metric: \"rmse\" result: resulting rmse value (NULL calculation failed) warnings: warnings generated calculation errors: errors generated calculation as_tibble = TRUE, trending classes, output tibble one row fitted model columns corresponding output generated single model input.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_rmse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic for calculating the root mean squared error — calculate_rmse","text":"Specific methods given trending_model (lists ), trending_fit, trending_fit_tbl, trending_predict_tbl, trending_predict_tbl trending_prediction objects. simply wrappers around yardstick::rmse_vec addition explicit error handling.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_rmse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic for calculating the root mean squared error — calculate_rmse","text":"Tim Taylor #' @examples x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y) poisson_model <- glm_model(y ~ x , family = \"poisson\") negbin_model <- glm_nb_model(y ~ x) fitted_model <- fit(poisson_model, dat) fitted_models <- fit(list(poisson_model, negbin_model), data = dat) calculate_rmse(poisson_model, dat) calculate_rmse(fitted_model) calculate_rmse(fitted_model, as_tibble = TRUE) calculate_rmse(fitted_models)","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_rsq.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic for calculating the root mean squared error — calculate_rsq","title":"Generic for calculating the root mean squared error — calculate_rsq","text":"Generic calculate_rsq() returns root mean square error given input.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_rsq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic for calculating the root mean squared error — calculate_rsq","text":"","code":"calculate_rsq(x, ...)  # Default S3 method calculate_rsq(x, ...)  # S3 method for class 'trending_model' calculate_rsq(x, data, na.rm = TRUE, as_tibble = TRUE, ...)  # S3 method for class 'list' calculate_rsq(x, data, na.rm = TRUE, ...)  # S3 method for class 'trending_fit' calculate_rsq(x, new_data, na.rm = TRUE, as_tibble = TRUE, ...)  # S3 method for class 'trending_fit_tbl' calculate_rsq(x, new_data, na.rm = TRUE, ...)  # S3 method for class 'trending_predict' calculate_rsq(x, na.rm = TRUE, as_tibble = TRUE, ...)  # S3 method for class 'trending_predict_tbl' calculate_rsq(x, na.rm = TRUE, ...)  # S3 method for class 'trending_prediction' calculate_rsq(x, na.rm = TRUE, as_tibble = TRUE, ...)"},{"path":"http://www.reconverse.org/trendeval/reference/calculate_rsq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic for calculating the root mean squared error — calculate_rsq","text":"x R object. ... currently used. data data.frame containing data (including response variable predictors) used specified model. na.rm NA values removed calculation metric (passed underlying function yardstick::rsq_vec). as_tibble result returned tibble (as_tibble = TRUE) list (as_tibble = FALSE). new_data data.frame containing data (including response variable predictors) assess model.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_rsq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic for calculating the root mean squared error — calculate_rsq","text":"single trending_fit input, as_tibble = FALSE object returned list entries: metric: \"rsq\" result: resulting rsq value (NULL calculation failed) warnings: warnings generated calculation errors: errors generated calculation as_tibble = TRUE, trending classes, output tibble one row fitted model columns corresponding output generated single model input.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_rsq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic for calculating the root mean squared error — calculate_rsq","text":"Specific methods given trending_model (lists ), trending_fit, trending_fit_tbl, trending_predict_tbl, trending_predict_tbl trending_prediction objects. simply wrappers around yardstick::rsq_vec addition explicit error handling.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/calculate_rsq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic for calculating the root mean squared error — calculate_rsq","text":"Tim Taylor #' @examples x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y) poisson_model <- glm_model(y ~ x , family = \"poisson\") negbin_model <- glm_nb_model(y ~ x) fitted_model <- fit(poisson_model, dat) fitted_models <- fit(list(poisson_model, negbin_model), data = dat) calculate_rsq(poisson_model, dat) calculate_rsq(fitted_model) calculate_rsq(fitted_model, as_tibble = TRUE) calculate_rsq(fitted_models)","code":""},{"path":"http://www.reconverse.org/trendeval/reference/evaluate_aic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic for calculating the AIC — evaluate_aic","title":"Generic for calculating the AIC — evaluate_aic","text":"evaluate_aic() generic evaluating Akaike's 'Information Criterion' given input","code":""},{"path":"http://www.reconverse.org/trendeval/reference/evaluate_aic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic for calculating the AIC — evaluate_aic","text":"","code":"evaluate_aic(x, ...)  # Default S3 method evaluate_aic(x, ...)  # S3 method for class 'trending_model' evaluate_aic(x, data, as_tibble = FALSE, ...)  # S3 method for class 'list' evaluate_aic(x, data, ...)"},{"path":"http://www.reconverse.org/trendeval/reference/evaluate_aic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic for calculating the AIC — evaluate_aic","text":"x R object. ... currently used. data data.frame containing data (including response variable predictors) used specified model. as_tibble result returned tibble (as_tibble = TRUE) list (as_tibble = FALSE).","code":""},{"path":"http://www.reconverse.org/trendeval/reference/evaluate_aic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic for calculating the AIC — evaluate_aic","text":"as_tibble = TRUE, input list models output tibble one row fitted model columns corresponding output generated single model input.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/evaluate_aic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic for calculating the AIC — evaluate_aic","text":"Specific methods given trending_fit lists models.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/evaluate_aic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic for calculating the AIC — evaluate_aic","text":"Tim Taylor #' @examples x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y) poisson_model <- glm_model(y ~ x , family = \"poisson\") negbin_model <- glm_nb_model(y ~ x) evaluate_aic(poisson_model, dat) evaluate_aic(list(poisson_model, negbin_model), data = dat)","code":""},{"path":"http://www.reconverse.org/trendeval/reference/evaluate_resampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Resampling approach for model evaluation — evaluate_resampling","title":"Resampling approach for model evaluation — evaluate_resampling","text":"evaluate_resampling() uses repeated K-fold cross-validation Root Mean Square Error (RMSE) testing sets measure predictive power single model. Methods provided trending::trending_model (lists ) objects.","code":""},{"path":"http://www.reconverse.org/trendeval/reference/evaluate_resampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resampling approach for model evaluation — evaluate_resampling","text":"","code":"evaluate_resampling(x, ...)  # Default S3 method evaluate_resampling(x, ...)  # S3 method for class 'trending_model' evaluate_resampling(   x,   data,   metric = c(\"rmse\", \"rsq\", \"mae\"),   metric_arguments = list(na.rm = TRUE),   v = 5,   repeats = 1,   ... )  # S3 method for class 'list' evaluate_resampling(   x,   data,   metric = c(\"rmse\", \"rsq\", \"mae\"),   metric_arguments = list(na.rm = TRUE),   v = 5,   repeats = 1,   ... )"},{"path":"http://www.reconverse.org/trendeval/reference/evaluate_resampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resampling approach for model evaluation — evaluate_resampling","text":"x R object. ... currently used. data data.frame containing data (including response variable predictors) used specified model. metric One \"rmse\" (see calculate_rmse), \"mae\" (see calculate_mae) \"rsq\" (see calculate_rsq). metric_arguments named list arguments passed underlying functions calculate metrics. v number equally sized data partitions used K-fold cross-validation; v cross-validations performed, using v - 1 partition training set, remaining partition testing set. Defaults number row data, method uses leave-one-cross validation, akin Jackknife except testing set (training set) used compute fit statistics. repeats number times random K-fold cross validation repeated ; defaults 1; larger values likely yield reliable / stable results, expense computational time","code":""},{"path":"http://www.reconverse.org/trendeval/reference/evaluate_resampling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resampling approach for model evaluation — evaluate_resampling","text":"functions wrap around existing functions several packages.  evaluate_resampling.trending_model() evaluate_resampling.list() use rsample::vfold_cv() sampling , calculating different metrics, yardstick package.","code":""},{"path":[]},{"path":"http://www.reconverse.org/trendeval/reference/evaluate_resampling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resampling approach for model evaluation — evaluate_resampling","text":"","code":"x <- rnorm(100, mean = 0) y <- rpois(n = 100, lambda = exp(x + 1)) dat <- data.frame(x = x, y = y) model <- trending::glm_model(y ~ x, poisson) models <- list(   poisson_model = trending::glm_model(y ~ x, poisson),   linear_model = trending::lm_model(y ~ x) )  evaluate_resampling(model, dat) #> # A tibble: 5 × 9 #>   metric result warnings errors model      fitting_warnings$warnings #> * <chr>   <dbl> <list>   <list> <list>     <list>                    #> 1 rmse     1.90 <NULL>   <NULL> <glm_trn_> <NULL>                    #> 2 rmse     2.20 <NULL>   <NULL> <glm_trn_> <NULL>                    #> 3 rmse     1.56 <NULL>   <NULL> <glm_trn_> <NULL>                    #> 4 rmse     1.98 <NULL>   <NULL> <glm_trn_> <NULL>                    #> 5 rmse     2.88 <NULL>   <NULL> <glm_trn_> <NULL>                    #> # ℹ 3 more variables: fitting_errors <tibble[,1]>, #> #   predicting_warnings <tibble[,1]>, predicting_errors <tibble[,1]> evaluate_resampling(models, dat) #> # A tibble: 10 × 10 #>    model_name    metric result warnings errors model      fitting_warnings$war…¹ #>    <chr>         <chr>   <dbl> <list>   <list> <list>     <list>                 #>  1 poisson_model rmse     2.12 <NULL>   <NULL> <glm_trn_> <NULL>                 #>  2 poisson_model rmse     2.77 <NULL>   <NULL> <glm_trn_> <NULL>                 #>  3 poisson_model rmse     2.02 <NULL>   <NULL> <glm_trn_> <NULL>                 #>  4 poisson_model rmse     1.55 <NULL>   <NULL> <glm_trn_> <NULL>                 #>  5 poisson_model rmse     1.79 <NULL>   <NULL> <glm_trn_> <NULL>                 #>  6 linear_model  rmse     3.12 <NULL>   <NULL> <lm_trnd_> <NULL>                 #>  7 linear_model  rmse     7.49 <NULL>   <NULL> <lm_trnd_> <NULL>                 #>  8 linear_model  rmse     3.89 <NULL>   <NULL> <lm_trnd_> <NULL>                 #>  9 linear_model  rmse     3.68 <NULL>   <NULL> <lm_trnd_> <NULL>                 #> 10 linear_model  rmse     5.61 <NULL>   <NULL> <lm_trnd_> <NULL>                 #> # ℹ abbreviated name: ¹​fitting_warnings$warnings #> # ℹ 3 more variables: fitting_errors <tibble[,1]>, #> #   predicting_warnings <tibble[,1]>, predicting_errors <tibble[,1]>"},{"path":"http://www.reconverse.org/trendeval/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. trending brm_model, glm_model, glm_nb_model, lm_model","code":""}]
